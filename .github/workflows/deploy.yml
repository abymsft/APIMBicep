name: Deploy Azure API Management

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Azure CLI
      uses: azure/cli@v2.0.0
      with:
        azcliversion: latest

    - name: Install Azure Developer CLI
      run: |
        curl -fsSL https://aka.ms/install-azd.sh | bash
        echo "$HOME/.azd/bin" >> $GITHUB_PATH

    - name: Azure Login (Federated Identity)
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Log in to azd
      run: |
        azd auth login --client-id "${{ secrets.AZURE_CLIENT_ID }}" --federated-credential-provider "github" --tenant-id "${{ secrets.AZURE_TENANT_ID }}"

    - name: Validate Bicep templates
      run: |
        az bicep build --file infra/main.bicep

    - name: Preview deployment (What-If)
      if: github.event_name == 'pull_request'
      run: |
        azd provision --preview

    - name: Provision Azure resources
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      run: |
        azd provision --no-prompt
      env:
        AZURE_LOCATION: eastus
        AZURE_PUBLISHER_NAME: "Your Organization"
        AZURE_PUBLISHER_EMAIL: "admin@yourorganization.com"
        AZURE_APIM_SKU: "Developer"
        AZURE_APIM_CAPACITY: "1"

    - name: Display deployment information
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      run: |
        echo "ðŸš€ Deployment completed successfully!"
        echo "Check the Azure portal for your API Management service details"

  validate:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Validate Bicep template
      run: |
        az bicep build --file infra/main.bicep --stdout > /dev/null
        echo "âœ… Bicep template validation passed"
